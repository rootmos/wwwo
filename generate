#!/bin/bash

set -o nounset -o pipefail -o errexit

SCRIPT_DIR=$(readlink -f $0 | xargs dirname)
ROOT=${ROOT-$SCRIPT_DIR}

if [ -f "$ROOT/.env" ]; then
    set -a
    . "$ROOT/.env"
    set +a
fi

META=$SCRIPT_DIR/meta.mk
META_JOBS=1
WORKDIR=
ENVIRONMENT=prod
while getopts "m:J:w:e:-" OPT; do
    case $OPT in
        m) META=$OPTARG ;;
        J) META_JOBS=$OPTARG ;;
        w) WORKDIR=$OPTARG ;;
        e) ENVIRONMENT=$OPTARG ;;
        -) break ;;
        ?) exit 2 ;;
    esac
done
shift $((OPTIND-1))

if [ -z "$WORKDIR" ]; then
    WORKDIR="$ROOT/.workdirs/$(date --utc +%FT%H%M%SZ)"
fi

WORKDIR=$(readlink -f "$WORKDIR")
echo 1>&2 "workdir: $WORKDIR"
mkdir -p "$WORKDIR"

rsync -avc "$ROOT/content/" "$WORKDIR/content"

mkdir -p "$WORKDIR/meta"
make -f "$META" -j"$META_JOBS" -C "$WORKDIR/meta" PROJECTS_SPEC="$WORKDIR/content/projects.json"

GENERATOR_EXE=${GENERATOR_EXE-}
if [ -z "$GENERATOR_EXE" ]; then
    GENERATOR_EXE="${GENERATOR_EXE_PREFIX-wwwo-}generator"
    if ! command -v "$GENERATOR_EXE" &>/dev/null; then
        GENERATOR_EXE="$ROOT/generator/src/gen.exe"
        if [ ! "$GENERATOR_EXE" ]; then
            echo 1>& "unable to figure out generator"
        fi
    fi
fi
GENERATOR_EXE=$(which "$GENERATOR_EXE")
echo 1>&2 "using generator: $GENERATOR_EXE"

"$SCRIPT_DIR/bin/fontawesome" "$WORKDIR/fa"

export WEBROOT="$WORKDIR/webroot"
mkdir -p "$WEBROOT"

(cd "$WORKDIR" && ENV="$ENVIRONMENT" "$GENERATOR_EXE")

find "$WEBROOT/$ENVIRONMENT" -name "*.html" -exec tidy -quiet -errors --doctype=html5 {} \;
